104. Maximum Depth of Binary Tree
Easy

Share
Given a binary tree, find its maximum depth.

class TreeNode:
  def __init__(self, val):
    self.val = val
    self.left = None
    self.right = None
   
 Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def maxDepth(self, root: TreeNode) -> int:
        depth = 0
        level = [root] if root else []
        
        while level:
            depth += 1
            queue = []
            for el in level:
                if el.left:
                    queue.append(el.left)
                if el.right:
                    queue.append(el.right)
            level = queue
        return depth
        
     def maxDepth_recursive(self, root):
          if not root:
              return 0
          return 1 + max(self.maxDepth_recursive(root.left), self.maxDepth_recursive(root.right))
